package Problems.Chapter15_Generics.t_SelfBoundedTypes;

/**
 * @author SashaKhyzhun on 3/16/17. Page 570.
 * Итак, самоограничение служит только для принудительного соблюдения отношений наследования.
 * Используя самоограничение, вы знаете, что параметр-тип, используемый классом,
 * будет относиться к тому же базовому типу, что и класс, использующий этот параметр.
 * Оно заставляет всех пользователей этого класса следовать указанному образцу.
 *
 * Самоограничение также можно использовать для обобщенных методов:
 */

public class SelfBoundingMethods {

    static <T extends SelfBounded2<T>> T f(T arg) {
        return arg.set(arg).get();
    }

    public static void main(String[] args) {
        A a = f(new A()); // omg
    }

    /**
     * Тем саммым вы запрещаете применять метод к чему-либо,
     * кроме самоограниченного аргумента представленной формы.
     */

}
