1) Чтобы определить коллекцию ArrayList для хранения объектов Apple, следует использовать
   запись ArrayList<Apple> вместо простого именни ArrayList. В угловые скобки заключаются
   параметры-типы (их может быть несколько). Теперь компилятор не позволяет поместить в
   ArrayList<Apple> любой другой объект; таким образом, разработчик узнает об ошибке не во
   время выполнения, а во время компиляции. (ApplesAndOrangesWithGenerics.java)

2) Библиотека контейнеров Java решает вопрос "хранения ваших объектов", рассмотривая его как
   совокупность двух различных концепций, выраженных основными интерфейсами библиотеки:

   а) Коллекция (Collection): последовательность отдельных элементов, формируемая по некоторым
      правилам.
      Интерфейс List   (список) храник элементы в определенной последовательности
      Интерфейс Set (множество) нельзя хранить повторяющиеся элементы.
      Интерфейс Queue (очередь) выдает элементы в порядке, определяемом дисциплиной очереди
                                (обычно совпадающем с порядком вставки).

   б) Карта (Map): Набор пар объектов "ключ-значение", с возможностью выборки значения по ключу.
      Контейнер ArrayList позволяет получить объект по числу, так что он в каком-то смысле
      связывает числа с объектоми. Карта позволяет получить объект по другому объекту. Также
      часто встречается термин ассоциативный массив (потому что объекты ассоциируются с другими
      объектами) и словарь (потому что объект-значение ищется по объекту-ключу, по аналогии с
      поиском определения по слову). Интерфейсы, производные от Map, - мощный и полезный инструмент.


3) Конструктор Collection может получить другой объект Collection, который используется для инициа-
   лизации, так что вы можете использовать Arrays.asList() для получения входных данных конструктора.
   Однако метод Collections.addAll() аботает намного быстрее, а решение с созданием Collection без
   элементов и последующим вызовом Collections.addAll() очень просто реализуется и поэтому считается
   предпочтительным.

4)