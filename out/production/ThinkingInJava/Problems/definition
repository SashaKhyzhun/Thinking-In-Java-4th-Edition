Ковариантностью    - называется сохранение иерархии наследования исходных типов в производных типах в том же порядке.
                     Так, если класс Cat наследует от класса Animal, то естественно полагать, что перечисление
                     IEnumerable<Cat> будет потомком перечисления IEnumerable<Animal>. Действительно, «список из
                     пяти кошек» — это частный случай «списка из пяти животных». В таком случае говорят, что тип
                     (в данном случае обобщённый интерфейс) IEnumerable<T> ковариантен своему параметру-типу T.

Контравариантность - ограничения супер класса.


Контравариантностью - называется обращение иерархии исходных типов на противоположную в производных типах. Так,
                     если класс String наследует от класса Object, а делегат Action<T> определён как метод,
                     принимающий объект типа T, то Action<Object> наследует от делегата Action<String>, а не наоборот.
                     Действительно, если «все строки — объекты», то «всякий метод, оперирующий произвольными объектами,
                     может выполнить операцию над строкой», но не наоборот. В таком случае говорят, что тип
                     (в данном случае обобщённый делегат) Action<T> контравариантен своему параметру-типу T.


Фиксация - есть ситуация, в которой использование <?> вместо неспециализированного типа особенно принципиально.
                     Если передать неспециализированный тип методу, использующему <?>, компилятор может автоматически
                     вычислить фактический параметртип и вызвать другой метод, использующий точный тип.


Делегирование — основной шаблон проектирования, в котором объект внешне выражает некоторое поведение, но в реальности
                     передаёт ответственность за выполнение этого поведения связанному объекту. Шаблон делегирования
                     является фундаментальной абстракцией, на основе которой реализованы другие шаблоны - композиция
                     (также называемая агрегацией), примеси (mixins) и аспекты (aspects).



Регулярные выражения - используются некоторыми текстовыми редакторами и утилитами для поиска и подстановки текста.
                       Например, при помощи регулярных выражений можно задать шаблоны, позволяющие: найти все
                       последовательности символов «кот» в любом контексте, как то: «кот», «котлета»,
                       «терракотовый»; найти отдельно стоящее слово «кот» и заменить его на «кошка»;
                       найти слово «кот», которому предшествует слово «персидский» или «чеширский»;
                       убрать из текста все предложения, в которых упоминается слово кот или кошка.