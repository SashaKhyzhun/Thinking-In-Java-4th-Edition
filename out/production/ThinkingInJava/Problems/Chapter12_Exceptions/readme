Обработка исключительных ситуаций (exception handling) — механизм языков программирования,
      предназначенный для описания реакции программы на ошибки времени выполнения и другие
      возможные проблемы (исключения), которые могут возникнуть при выполнении программы и
      приводят к невозможности (бессмысленности) дальнейшей отработки программой её базового
      алгоритма.

+-----------------------------------------------------------------------------------+
| В Java есть пять ключевых слов для работы с исключениями:                         |
+-----------------------------------------------------------------------------------+
| try     - данное ключевое слово используется для отметки начала блока кода,       |
|          который потенциально может привести к ошибке.                            |
+-----------------------------------------------------------------------------------+
| catch   - ключевое слово для отметки начала блока кода, предназначенного          |
|          для перехвата и обработки исключений.                                    |
+-----------------------------------------------------------------------------------+
| finally - ключевое слово для отметки начала блока кода, которое является          |
|          дополнительным. Этот блок помещается после последнего блока 'catch'.     |
|          Управление обычно передаётся в блок 'finally' в любом случае.            |
+-----------------------------------------------------------------------------------+
| throw   - служит для генерации исключений.                                        |
+-----------------------------------------------------------------------------------+
| throws  - ключевое слово, которое прописывается в сигнатуре метода, и обозначающее|
|           что метод потенциально может выбросить исключение с указанным типом.    |
+-----------------------------------------------------------------------------------+


Дело в том, что в java есть два типа исключений: checked и unchecked.

1. Checked исключения, это те, которые должны обрабатываться блоком catch
   или описываться в сигнатуре метода.
   Unchecked могут не обрабатываться и не быть описанными.

2. Unchecked исключения в Java - наследованные от RuntimeException,
   checked - от Exception (не включая unchecked).

Пример, unchecked исключения - NullPointerException, checked исключения - IOException.


1. RuntimeException
IndexOutOfBoundsException - выбрасывается, когда индекс некоторого элемента в структуре данных
                            (массив/коллекция) не попадает в диапазон имеющихся индексов.
NullPointerException      - ссылка на объект, к которому вы обращаетесь хранит null/
ClassCastException        – Ошибка приведения типов. Всякий раз при приведении типов делается проверка
                            на возможность приведения (проверка осуществляется с помощью instanceOf.
ArithmeticException       - бросается когда выполняются недопустимые арифметические операции, например
                            деление на ноль.

2. Error
ThreadDeath               - вызывается при неожиданной остановке потока посредством метода Thread.stop().
StackOverflowError        - ошибка переполнение стека. Часто возникает в рекурсивных функциях из-за
                            неправильного условия выхода.